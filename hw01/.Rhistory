data <- read.csv(file = "imports-85.data")
View(data)
View(data)
??read.csv
titles <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels","engine_location","wheel_base","length","width","height","curb_weight","enginge_type", "num_of_cylinders","engine_size","fuel_system", "bore", "stroke","compression_ratio","horsepower","peak_rpm","city_mpg","highway_mpg","price")
data <- read.csv(file = "imports-85.data")
titles <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels","engine_location","wheel_base","length","width","height","curb_weight","enginge_type", "num_of_cylinders","engine_size","fuel_system", "bore", "stroke","compression_ratio","horsepower","peak_rpm","city_mpg","highway_mpg","price")
data <- read.csv(file = "imports-85.data", col_names = titles)
titles <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels","engine_location","wheel_base","length","width","height","curb_weight","enginge_type", "num_of_cylinders","engine_size","fuel_system", "bore", "stroke","compression_ratio","horsepower","peak_rpm","city_mpg","highway_mpg","price")
data <- read.csv(file = "imports-85.data", col_names = "titles")
install.packages(readr)
install.packages("readr")
install.packages("corrplot")
library("corrplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
principal <- prcomp(scale. = TRUE, qdat)
removed_data <- subset(data, select = c("wheel_base","length","width","height","curb_weight","engine_size", "bore", "stroke","compression_ratio","horsepower","peak_rpm","city_mpg","highway_mpg","price"))
titles <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels","engine_location","wheel_base","length","width","height","curb_weight","enginge_type", "num_of_cylinders","engine_size","fuel_system", "bore", "stroke","compression_ratio","horsepower","peak_rpm","city_mpg","highway_mpg","price")
types = c("double","double","character","character","character","character","character","character","character", "double","double","double","double","integer","character","character","integer","character","double","double","double","integer","integer","integer","integer","integer")
data <- read.csv(file = "imports-85.data", col.names = titles, colClasses = types, header = FALSE, na = "?")
data
str(data)
data2 <- read.csv(file = "imports-85.data", header = FALSE, na = "?")
data2
hist(data$price, col= "blue")
boxplot(horizontal = TRUE, data$horsepower)
car_type <- as.data.frame(table(data$body_style))
car_type2 <- car_type[order(car_type$Freq, decreasing = TRUE),]
barplot(car_type2$Freq, axisnames = TRUE, names.arg = car_type2$Var)
aspiration_turbo = data[which(data$aspiration == "turbo"),]
turbo_table = stars(subset(aspiration_turbo, select = c("wheel_base", "length", "width", "height", "price")))
turbo_table
data_gas = data[which(data$fuel_type == "gas"),]
data_diesel = data[which(data$fuel_type == "diesel"),]
mean_gas = mean(data_gas$price, na.rm = TRUE)
mean_diesel = mean(data_diesel$price, na.rm = TRUE)
mean_gas
mean_diesel
data_make = subset(data, select = c("make", "num_of_cylinders"))
cylinder_number = data_make[which(data_make$num_of_cylinders == "twelve"),]
cylinder_number
make_diesel = subset(data, select = c("make", "fuel_type"))
fuel = make_diesel[which(make_diesel$fuel_type == "diesel"),]
fuel2 = as.data.frame(table(fuel$make))
fuel2
hp = data[order(data$horsepower, decreasing=TRUE),]
hp[1,]["make"]
quantile(data$city_mpg, c(0.1))
quantile(data$highway_mpg, c(0.9))
bottom = data[which(data$city_mpg < 17),]
median(bottom$price, na.rm= TRUE)
mtcars[["mpg"]]
mtcars$"mpg"
mtcars[ ,"mpg"]
removed_data <- subset(data, select = c("wheel_base","length","width","height","curb_weight","engine_size", "bore", "stroke","compression_ratio","horsepower","peak_rpm","city_mpg","highway_mpg","price"))
qdat = na.omit(removed_data)
qdat
if (!require('corrplot'))
{
install.packages('corrplot');
library('corrplot');
}
plot_qdat <- cor(qdat)
corrplot(plot_qdat, method = "ellipse")
corrplot(plot_qdat, type = "upper", order = "hclust" )
principal <- prcomp(scale. = TRUE, qdat)
summary(principal)
scatter_vehicles <- principal$x
plot(scatter_vehicles[, "PC1"], scatter_vehicles[, "PC2"])
principal <- princomp(qdat, cor = TRUE)
principal_load <- principal$loadings
principal_load
plot(principal_load[, "Comp.1"], principal_load[, "Comp.2"])
